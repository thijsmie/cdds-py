name: CI automated testing

on: push

jobs:
  build-cyclone:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Cyclone 🚨
      uses: actions/checkout@v2
      with:
        repository: eclipse-cyclonedds/cyclonedds
        path: cyclonedds
        ref: master
        token: ${{ secrets.PAT }}

    - name: Check for Cyclone build cache 💽
      id: cyclone-cache
      uses: actions/cache@v2
      with:
        path: cyclonedds
        key: ${{ runner.os }}-v3-${{ hashFiles('cyclonedds/.git/refs/heads/master') }}

    - name: Get Java and Maven ☕
      if: steps.cyclone-cache.outputs.cache-hit != 'true'
      uses: actions/setup-java@v1
      with:
        java-version: '9'
        java-package: jdk
        architecture: x64

    - name: Get latest CMake ⚡
      if: steps.cyclone-cache.outputs.cache-hit != 'true'
      uses: lukka/get-cmake@v3.19.1

    - name: Build Cyclone 🌀
      if: steps.cyclone-cache.outputs.cache-hit != 'true'
      run: |
        mkdir cyclonedds/build cyclonedds/install && cd cyclonedds/build
        cmake .. -DCMAKE_INSTALL_PREFIX=../install
        cmake --build . --target install

    - name: Build result upload 🚀
      uses: actions/upload-artifact@v2
      with:
        name: cyclone-build
        path: cyclonedds

  test:
    if: "!contains(github.event.head_commit.message, 'skip ci')"
    runs-on: ubuntu-latest
    needs: build-cyclone
    strategy:
      fail-fast: false
      matrix:
        python:
          - 3.6.12
          - 3.7.9
          - 3.9.0

    steps:
    - name: Checkout 🚨
      uses: actions/checkout@v2

    - name: Get Cyclone 🌀
      uses: actions/download-artifact@v2
      with:
        name: cyclone-build
        path: cyclonedds
    
    - name: Install python 🐍
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python }}

    - name: Update pip 🐍
      run: python -m pip install --upgrade pip

    - name: For python 3.6 we need backported dataclasses 🐍
      if: matrix.python == '3.6.12'
      run: pip install dataclasses

    - name: Install pycdr 🐍
      working-directory: ./src/pycdr
      run: |
        pip install .

    - name: Install cdds 🐍
      working-directory: ./src/cdds
      env:
        LIBRARY_PATH: ${{ github.workspace }}/cyclonedds/install/lib
        LD_LIBRARY_PATH: ${{ github.workspace }}/cyclonedds/install/lib
        DDS_INCLUDE_DIR: ${{ github.workspace }}/cyclonedds/install/include
      run: |
        pip install --global-option=build_ext --global-option="-I$DDS_INCLUDE_DIR" .
        pip install pytest pytest-cov flake8

    - name: Lint with flake8 ❄
      run: |
        flake8 ./src/cdds/cdds --count --select=E9,F63,F7,F82 --show-source --statistics
        flake8 ./src/cdds/cdds --count --exit-zero --max-complexity=10 --max-line-length=127 --per-file-ignores="__init__.py:F401" --statistics

    - name: Run tests 🧪
      working-directory: ./src/cdds
      env:
        LD_LIBRARY_PATH: ${{ github.workspace }}/cyclonedds/install/lib
      run: pytest

    - name: Upload coverage report to codecov 🚀
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }}
        file: ./src/cdds/cov.xml
        flags: unittests
        env_vars: OS,PYTHON
        name: codecov-umbrella
        fail_ci_if_error: true
        verbose: false